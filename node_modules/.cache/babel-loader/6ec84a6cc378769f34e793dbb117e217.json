{"ast":null,"code":"var _jsxFileName = \"/Users/linhlk/Study/counter/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Button, Form, FormControl, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Children from './components/Children';\n\nfunction App() {\n  let count = useSelector(state => state.count);\n  const [bgColor, setBgColor] = useState(\"white\");\n  const [number, setNumber] = useState(0);\n  let dispatch = useDispatch();\n\n  const handleChange = e => {\n    setBgColor(e.target.value);\n  };\n\n  const handleNumber = e => {\n    setNumber(parseInt(e.target.value));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Counting box: \", count), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: () => dispatch({\n      type: \"Increment\",\n      payload: number\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Increment\"), count <= 0 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-danger\",\n    onClick: () => dispatch({\n      type: \"Decrement\",\n      payload: number\n    }),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Decrement\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-danger\",\n    onClick: () => dispatch({\n      type: \"Decrement\",\n      payload: number\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => dispatch({\n      type: \"Reset\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"number\",\n    placeholder: \"Input your number\",\n    onChange: handleNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Input your color\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, Array(count).fill(\"box\").map(box => {\n    return /*#__PURE__*/React.createElement(Children, {\n      bgColor: bgColor,\n      count: count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    });\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/linhlk/Study/counter/src/App.js"],"names":["React","useState","useSelector","useDispatch","Container","Button","Form","FormControl","Row","Col","Children","App","count","state","bgColor","setBgColor","number","setNumber","dispatch","handleChange","e","target","value","handleNumber","parseInt","type","payload","Array","fill","map","box"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Button, Form, FormControl, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Children from './components/Children';\n\n\nfunction App() {\n\n  let count = useSelector(state => state.count);\n  const [bgColor, setBgColor] = useState(\"white\")\n  const [number, setNumber] = useState(0);\n  let dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setBgColor(e.target.value);\n  }\n\n  const handleNumber = (e) => {\n    setNumber(parseInt(e.target.value));\n  }\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col xs={3}>\n            <h3>Counting box: {count}</h3>\n            <Button variant=\"outline-success\" onClick={() => dispatch({ type: \"Increment\", payload: number })}>Increment</Button>\n            {\n              count <= 0 ?\n                <Button variant=\"outline-danger\" onClick={() => dispatch({ type: \"Decrement\", payload: number })} disabled>Decrement</Button>\n                :\n                <Button variant=\"outline-danger\" onClick={() => dispatch({ type: \"Decrement\", payload: number })}>Decrement</Button>\n            }\n            <Button variant=\"outline-secondary\" onClick={() => dispatch({ type: \"Reset\" })}>Reset</Button>\n            <Form inline>\n              <FormControl type=\"number\" placeholder=\"Input your number\" onChange={handleNumber}></FormControl>\n              <FormControl type=\"text\" placeholder=\"Input your color\" onChange={handleChange}></FormControl>\n            </Form>\n          </Col>\n\n          <Col xs={9}>\n            {\n              Array(count).fill(\"box\").map(box => {\n                return (\n                  <Children bgColor={bgColor} count={count} />\n                )\n              })\n            }\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
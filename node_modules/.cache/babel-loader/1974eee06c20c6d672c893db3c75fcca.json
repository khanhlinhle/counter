{"ast":null,"code":"var _jsxFileName = \"/Users/linhlk/Study/counter/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  if (action.type === \"Increment\") {\n    state.count = state.count + action.payload;\n    console.log(state.count);\n  } else if (action.type === \"Decrement\") {\n    if (state.count == 0) {\n      state.count = 0;\n    } else {\n      state.count = state.count - action.payload;\n    }\n  } else {\n    state.count = initialState.count;\n  }\n\n  return { ...state\n  };\n}\n\nconst store = createStore(reducer);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/linhlk/Study/counter/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","initialState","count","reducer","state","action","type","payload","console","log","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAA+C;AAE7C,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/BF,IAAAA,KAAK,CAACF,KAAN,GAAcE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE,OAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACF,KAAlB;AACD,GAHD,MAGO,IAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AACtC,QAAIF,KAAK,CAACF,KAAN,IAAe,CAAnB,EAAsB;AACpBE,MAAAA,KAAK,CAACF,KAAN,GAAc,CAAd;AACD,KAFD,MAEO;AACLE,MAAAA,KAAK,CAACF,KAAN,GAAcE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE,OAAnC;AACD;AACF,GANM,MAMA;AACLH,IAAAA,KAAK,CAACF,KAAN,GAAcD,YAAY,CAACC,KAA3B;AACD;;AACD,SAAO,EAAE,GAAGE;AAAL,GAAP;AACD;;AAED,MAAMM,KAAK,GAAGV,WAAW,CAACG,OAAD,CAAzB;AAEAP,QAAQ,CAACe,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nconst initialState = {\n  count: 0,\n}\n\nfunction reducer(state = initialState, action) {\n\n  if (action.type === \"Increment\") {\n    state.count = state.count + action.payload;\n    console.log(state.count);\n  } else if (action.type === \"Decrement\") {\n    if (state.count == 0) {\n      state.count = 0;\n    } else {\n      state.count = state.count - action.payload;\n    }\n  } else {\n    state.count = initialState.count;\n  }\n  return { ...state }\n}\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}